@{
    ViewBag.Title = "Contact";
}
<div class="body_mid_contact">
    <div class="header_contact">
        <p class="work_name">database</p>
        <textarea cllass="edittext" data-lexical-text="true" id="SQL_input" value="tesst"></textarea>
        <div class="head1">
            <button class="head2" onclick="laytext()">print report</button>
            <button class="head3" onclick="clear_all_colum()">clear all colum</button>
            <button class="head4" onclick="sinh_sql()">print</button>
        </div>


    </div>
    <div class="body_work">
        <div class="left_work">
            <div class="table_column" id="tett">
                <ul id="table_add"></ul>
            </div>
        </div>

        <div class="right_work">
            <div id="work_space_contact">
                <div class="row" id="row1">
                    <div class="right_work_table_name" style="background: #a9c5eb;">table</div>
                    <div class="right_work_column_name" style="background: #a9c5eb;">column</div>
                    <div class="right_work_fun" style="background: #a9c5eb;">fun</div>
                    <div class="right_work_sort" style="background: #a9c5eb;">sort</div>
                    <div class="tmp_input " style="background: #a9c5eb;">input sherr</div>
                </div>

            </div>
        </div>
    </div>
</div>
<style>
:root {
    --textHead: #000000;
    --hovertext: #f80f0f;
    --boder-coloer: #89f7fe;
    --bkgcolor: linear-gradient(45deg, #6f86d6, #89f7fe);
    --button_color: linear-gradient(to right bottom, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.3));
    --header_color: linear-gradient(45deg, #108dc7, #ef8e38);
    --menu_tmp: linear-gradient(to right bottom, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.7));
    background: var( --bkgcolor);
}

.body_mid_contact {
    display: block;
}
.header_contact {
    display: flex;
    margin-left: 20px;
    border: none;
    border-radius: 20px;
    justify-content: space-between;
    align-items: center;
    background: #a9c5eb;
}

.header_contact p {
    height: 100%;
    width: 10%;
    font-size: 30px;
    text-align: center;
}

.edittext {
    background: none;
}

textarea {
    clear: left;
    min-width: 60%;
    max-width: 60%;
    min-height: 150px;
    max-height: 150px;
}

.head1 {
    height: 150px;
    margin-right: 15px 25px 15px 25px;
}

.head2,
.head3,
.head4 {
    height: 100%;
    /* width: 100px; */

    border-radius: 4px;
    border: none;
    background: var(--bkgcolor);
    font-size: 20px;
}
.head2:hover,.head3:hover,.head4:hover{
    cursor: pointer;
    background: linear-gradient(135deg, rgb(224, 37, 199), rgb(255, 188, 246), rgb(255, 212, 249));
}

.head4 {
    width: 100px;
}

.head4 {
    width: 100px;
}


.body_work {
    display: flex;
}

.left_work,
.right_work {
    background: var(--button_color);
    margin-top: 30px;
    border: none;
    min-height: 100vh;
    border-radius: 20px;
}

.left_work {
    margin-left: 20px;
    width: 30%;
    background: #a9c5eb;
}

.right_work {
    margin-left: 20px;
    width: 100%;
}

#work_space_contact {
    margin: 30px 0 0 30px;
}


/* menu doc da cap */

.table_column ul {
    width: 100%;
    padding: 0;
    list-style-type: none;
    background: #a9c5eb;
}

.table_column ul li {
    width: auto;
    height: 40px;
    line-height: 40px;
    border-bottom: 1px solid rgb(255, 0, 200);
    /* padding: 0 1em; */
    position: relative;
    font-size: 25px;
}

.table_column ul li a {
    text-decoration: none;
    color: rgb(0, 0, 0);
    font-weight: bold;
    display: block;
}

.table_column ul li:hover {
    background: rgb(255, 0, 200);
    cursor: pointer;
}

.colum_add {
    position: absolute;
    left: 100%;
    top: 0;
    display: none;
}

.table_column ul li:hover .colum_add {
    display: block;
}

.column_pick {
    font-size: 25px;
    border: none;
    background: #a9c5eb;
    height: 80%;
    width: 100%;
    color: black;
    font-weight: bold;
}

.column_pick:hover {
    /* background: aqua; */
    cursor: pointer;
}


/* done menu */


/* wwork */

.row {
    display: flex;
    height: 50px;
    /* border: 1px solid rgb(2, 46, 46); */
    align-items: center;
    margin-top: 10px;
}

.right_work_table_name,
.right_work_column_name,
.right_work_fun,
.right_work_sort,
.row button,
.right_work_fun option,
.tmp_input {
    margin-left: 10px;
    height: 90%;
    font-size: 25px;
    border: 2px solid var(--boder-coloer);
    border-radius: 15px;
    background: var(--menu_tmp);
    outline: none;
    text-align: center;
}

.right_work_table_name {
    width: 200px;
}

.right_work_column_name {
    width: 400px;
}

.right_work_fun,
.right_work_sort {
    width: 100px;
}

.row input,
.tmp_input {
    margin-left: 10px;
    height: 80%;
    width: 200px;
}

.right_work_fun:hover,
.right_work_sort:hover,
.row button:hover {
    background: #a9c5eb;
    cursor: pointer;
}

.right_work_table_name:hover,
.right_work_column_name:hover,
.right_work_fun:hover,
.right_work_sort:hover,
.row button:hover,
.right_work_fun option:hover,
.tmp_input:hover {
    cursor: pointer;
}

</style>
<script type="text/javascript">

        data_name_add_work()

        function data_name_add_work() {
            var table = [
                ['QLVT', 'tmp', 'TN_CSDLPT', 'NGANHANG'],
                ['QLVT_1', 'TN_CSDLPT_1', 'NGANHAN00000000000000000000000000000G_1', 'QLVT_1b', 'TN_CSDLPT_1b', 'NGANHANG_1b'],
                ['QLVT_2', 'TN_CSDLPT_2', 'NGANHANG_2', 'QLVT_1b', 'TN_CSDLPT_1b', 'NGANHANG_1b'],
                ['QLVT_4', 'TN_CSDLPT_4', 'NGANHANG_4', 'QLVT_1b', 'TN_CSDLPT_1b', 'NGANHANG_1b'],
                ['QLVT_3', 'TN_CSDLPT_3', 'NGANHANG_3', 'QLVT_1b', 'TN_CSDLPT_1b', 'NGANHANG_1b'],
            ];
            var select_name = 'table';
            var option_name = "column";
            var class_parents = document.getElementsByClassName('table_column')[0];
            // addoption(table, select_name, option_name, class_parents);
            creat_table_database(table)
        }

        function creat_table_database(table) {

            for (var i = 0; i < table[0].length; i++) {

                var table_name = table[0][i];

                var text_table = '<li class="table_add_li" id="' + table_name + '_li">\n<a>' + table_name + '</a>\n<ul class="colum_add" id="' + table_name + '_column_add">\n</ul>\n</li>'
                document.getElementById('table_add').insertAdjacentHTML('beforeend', text_table);
                for (var j = 0; j < table[i + 1].length; j++) {
                    var column_name = table[i + 1][j];
                    var text_column = '<li>\n<button class="column_pick" id="' + column_name + '.' + table_name + '">' + column_name + '</button>\n</li>';
                    document.getElementById(table_name + '_column_add').insertAdjacentHTML('beforeend', text_column);
                    var add_id = document.getElementById(column_name + '.' + table_name);
                    add_id.setAttribute('onclick', 'add_column_to_work(\'' + column_name + '.' + table_name + '\')');
                }
            }


        }

var table_pick_column=new Array();
var tmp_pick_colum=0;

        function add_column_to_work(tmp_data) {

            var tmpstr_data = tmp_data.split(".")
            var column_data = tmpstr_data[0];
            var table_data = tmpstr_data[1];

            // add bang
            tmp_pick_colum+=1;
            table_pick_column.push(tmp_data);
            let del=document.getElementById(tmp_data);
            del.disabled=true;
            del.style.background="gray";
            console.log(table_pick_column)

            var row_add = '<div class="row" id="row_' + column_data + '.' + table_data + '">\n<div class="right_work_table_name" >' + table_data + '</div>\n<div class="right_work_column_name">' + column_data + '</div>\n<select class="right_work_fun"  onchange="right_work_fun(this)">\n    <option value="">fun</option>\n    <option value="' + column_data + '.' + table_data + '_count">count</option>\n    <option value="' + column_data + '.' + table_data + '_sum">sum</option>\n    <option value="' + column_data + '.' + table_data + '_average">average</option>\n    <option value="' + column_data + '.' + table_data + '_non">non</option>\n</select>\n<select class="right_work_sort" onchange="right_work_sort(this)" >\n    <option value="">sort</option>\n    <option value="' + column_data + '.' + table_data + '_sortB">12 1</option>\n    <option value="' + column_data + '.' + table_data + '_sortA">12 2</option>\n</select>\n<input type="text" id = "input_row_' + column_data + '.' + table_data + '">\n</div>'
            var htmlObj = document.getElementById('work_space_contact');
            htmlObj.innerHTML = htmlObj.innerHTML + row_add;


            //add button
            var text_button_add = '<button id="button_' + column_data + '.' + table_data + '">clear</button>';
            document.getElementById('row_' + column_data + '.' + table_data).insertAdjacentHTML('beforeend', text_button_add);
            var del_id = document.getElementById('button_' + column_data + '.' + table_data);
            del_id.setAttribute('onclick', 'deleterow(\'row_' + column_data + '.' + table_data + '\')')
        }



        function deleterow(tmp_delete) {

            var child = document.getElementById(tmp_delete);
            child.remove(tmp_delete);

            let del=tmp_delete.replace('row_','')
            table_pick_column.splice(table_pick_column.indexOf(del), 1);
            console.log(del)
            let restore=document.getElementById(del);

            restore.disabled=false;
            restore.style.background="#a9c5eb";
        }

        function clear_all_colum()
        {
            var tmp=table_pick_column.length
            for (let i = 0; i < tmp; i++) {
            var del_tmp=table_pick_column.pop();
            var del='row_'+del_tmp;
            console.log(del)

            var child = document.getElementById(del);
            child.remove(del);
                // mo lai nut trong pick column
            let restore=document.getElementById(del_tmp);
            restore.disabled=false;
            restore.style.background="#a9c5eb";
            }

            // update text sql
            var a = document.getElementById("SQL_input");
            a.value = 'querty';
        }


        function sinh_sql()
        {
            var input_sql = document.getElementById("SQL_input");
            var input_tmp='input_row_';
            var sum_sql='';
            for (let i = 0; i < table_pick_column.length; i++) {
            var sql_input_id=input_tmp+table_pick_column[i];
            var sql_input = document.getElementById(sql_input_id);
                sum_sql+=sql_input.value+'      '
            }

            input_sql.value=sum_sql;

        }

        function laytext() {
            var a = document.getElementById("SQL_input");
a.value += "abcdaedaaaaaaaddddddddddddddddddddd";
console.log(a.value)
        }

</script>